# ~/.zshrc
# zsh_svn

setopt NO_PROMPT_CR
setopt NO_BEEP
setopt AUTO_MENU
setopt COMPLETE_IN_WORD
setopt EXTENDED_GLOB
setopt AUTOCD
setopt INTERACTIVE_COMMENTS
setopt APPEND_HISTORY
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt SHARE_HISTORY

zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}'
zstyle ':completion::complete:*' use-cache 1
zstyle ':completion:*:descriptions' format '%U%B%d%b%u'
zstyle ':completion:*:warnings' format '%BSorry, no matches for: %d%b'

autoload -U compinit
compinit -d ~/.zcompdump.`hostname`

bindkey '^a' beginning-of-line
bindkey '^e' end-of-line
bindkey '^r' history-incremental-search-backward
bindkey '^y' yank
bindkey '^x' copy-prev-shell-word
bindkey '^z' vi-undo-change
bindkey "\e[1~" beginning-of-line	# home
bindkey "\e[2~" quoted-insert		# insert
bindkey "\e[3~" delete-char			# delete
bindkey "\e[4~" end-of-line			# end
bindkey "\e[5~" shell-backward-word	# pgup
bindkey "\e[6~" shell-forward-word	# pgdn
#bindkey "\e[7~" beginning-of-line
#bindkey "\e[8~" end-of-line
#bindkey "\e[H" beginning-of-line
#bindkey "\e[F" end-of-line
#bindkey "\eOH" beginning-of-line
#bindkey "\eOF" end-of-line
#bindkey "\eOd" backward-word
#bindkey "\eOc" forward-word

alias py=python
alias find='noglob find'
alias woi='ssh wijk -t screen -Dr'
alias doi='ssh doija -t screen -Dr'
alias soi='ssh soija -t screen -Dr'
alias mutto='ssh mail.oijk.net -t env LC_ALL=en_US.ISO8859-15 mutt'
alias gate="ssh -A gate.ladan.se -t"


update-cert() {
	emulate -L zsh
	if [[ -f ~/.svncert ]] ; then
		echo already got sslcert
		exit 0
	fi
	echo getting rootcert for svn
	get https://svn.ladan.se/bah/Equifax_Secure_Global_eBusiness_CA-1.pem nosslcheck > ~/.svncert
	get https://svn.ladan.se/bah/Equifax_Secure_Global_eBusiness_CA-1.pem rapidssl > /dev/null
	if [[ $? != 0 ]];then
		rm ~/.svncert
		echo error validating cert
	else
		echo got cert
	fi
}

update-zsh() {
	emulate -L zsh
	echo updating zsh-config
	get https://svn.ladan.se/bah/configs/zshrc rapidssl >~/.zshrc_ && mv ~/.zshrc_ ~/.zshrc && echo zshrc updated.
	get https://svn.ladan.se/bah/configs/zprofile rapidssl >~/.zprofile_ && mv ~/.zprofile_ ~/.zprofile && echo zprofile updated.
	if [[ -f ~/.zshrc.user ]] ; then
		get http://doija.oijk.net/zsh/zsh_latest/users/$USER >~/.zshrc.user_ && mv ~/.zshrc.user_ ~/.zshrc.user && echo zshrc.user updated.
	fi
	rm ~/.zcompdump.*
}

update-conf() {
	emulate -L zsh
	echo updating ${1}-config
	if [[ ${1} == "ssh" ]] ;then
		mkdir -p ~/.ssh
		get https://svn.ladan.se/bah/configs/ssh_config rapidssl >~/.ssh/config_ && mv ~/.ssh/config_ ~/.ssh/config && echo ssh/config updated.
		get https://svn.ladan.se/bah/configs/ssh_authorized_keys rapidssl >~/.ssh/authorized_keys_ && mv ~/.ssh/authorized_keys_ ~/.ssh/authorized_keys && echo ssh/authorized_keys updated.
	elif [[ ${1} == "mutt" ]] ;then
		file=muttrc
		get https://svn.ladan.se/bah/configs/${file} rapidssl >~/.${file}_ && mv ~/.${file}_ ~/.${file} && echo ${file} updated.
	elif [[ ${1} == "screen" ]] ;then
		file=screenrc
		get https://svn.ladan.se/bah/configs/${file} rapidssl >~/.${file}_ && mv ~/.${file}_ ~/.${file} && echo ${file} updated.
	fi
}

get() {
	emulate -L zsh
	if which curl >/dev/null; then
		if [[ -z $2 ]];then
			curl "$1"
		elif [[ x$2 == "xnosslcheck" ]];then
			curl -k "$1"
		elif [[ x$2 == "xrapidssl" ]];then
			curl --cacert ~/.svncert "$1"
		fi
	elif which wget >/dev/null; then
		if [[ -z $2 ]];then
			wget -O - "$1"
		elif [[ x$2 == "xnosslcheck" ]];then
			wget --no-check-certificate -O - "$1"
		elif [[ x$2 == "xrapidssl" ]];then
			wget --certificate=~/.svncert -O - "$1"
		fi
	else
		return 2
	fi
}

precmd() {
	if [ "$TERM" != "linux" ]; then
		echo -ne "\033]0;${USER}@${HOST}: ${PWD}\007"
	fi
}

shell-backward-word() {
	emulate -L zsh
	local words word spaces
	words=(${(z)LBUFFER})
	word=$words[-1]
	spaces=-1
	while [[ $LBUFFER[$spaces] == " " ]]; do
			(( spaces-- ))
	done
	(( CURSOR -= $#word - $spaces - 1 ))
}
shell-forward-word() {
	emulate -L zsh
	local words word spaces
	words=(${(z)RBUFFER})
	word=$words[1]
	spaces=1
	while [[ $RBUFFER[$spaces] == " " ]]; do
		(( spaces++ ))
	done
	(( CURSOR += $#word + $spaces - 1 ))
}
shell-backward-kill-word() {
	emulate -L zsh
	local words word spaces
	words=(${(z)LBUFFER})
	word=$words[-1]
	if [[ -n ${word[2,-2]//[^\/]} ]]; then
		word=${word##*/?}o
	fi
	spaces=-1
	while [[ $LBUFFER[$spaces] == " " ]]; do
			(( spaces-- ))
	done
	#killring=("$CUTBUFFER" "${(@)killring[1,-2]}")
	#CUTBUFFER=$LBUFFER[$((-$#word + $spaces + 1)),-1]
	LBUFFER=$LBUFFER[0,$((-$#word + $spaces))]
}
zle -N shell-backward-word
zle -N shell-forward-word
zle -N shell-backward-kill-word
bindkey '^w' shell-backward-kill-word

if [ "$HAVE_RUN_ZPROFILE" != "Y" ]; then
  . ~/.zprofile
fi
if [[ -f ~/.zshrc.user ]]; then
  . ~/.zshrc.user
fi
if [[ -f ~/.zshrc.local ]]; then
  . ~/.zshrc.local
fi
